{{>/layout/main-header}}

<div class="container">
    <div class="my_auth_box">
        <div class="my_auth_form_box">
            <div class="my_auth_form_box_title">JSotry</div>
            <div class="my_error_box my_hidden">
            </div>
            <form action="/join" method="post" id="joinForm">
                <input id="username" class="my_auth_form_box_input" type="text" name="username" placeholder="유저네임"
                       maxlength="20" value="" required/>
                <div id="usernameError" class="my_hidden" style="color: red">중복된 아이디입니다.</div>
                <div id="usernameSuccess" class="my_hidden" style="color: blue">사용 가능한 아이디입니다.</div>

                <input id="password" class="my_auth_form_box_input" type="password" name="password" placeholder="비밀번호"
                       maxlength="20" value="1234" required/>
                <input id="same-password" class="my_auth_form_box_input" type="password" name="" placeholder="비밀번호 확인"
                       maxlength="20" required/>
                <div id="errorText" style="color: red">비밀번호가 일치하지 않습니다.</div>
                <div id="successText" style="color: blue">비밀번호가 일치합니다.</div>

                <div class="email-box d-flex">
                    <input class="my_auth_form_box_input" id="email" type="email" name="email" placeholder="이메일" maxlength="60"
                           value="compilemate@gmail.com"
                           required/>

<!--                    <a href="javascript:openModal('modal1');" class="close">(자세히보기)</a>-->
                    <button class="btn btn-outline-info btn-sm" type="button" id="emailAuthButton">인증하기</button>
                    <!--

                                  <button class="btn btn-outline-success btn-sm" type="submit"
                                  onclick="emailCheck()">인증하기</button>

                   <a href="javascript:openModal('modal1');" class="close">(자세히보기)</a>


                                  -->
                </div>

                <!-- 여기에 hidden input을 추가하세요 -->
                <input type="hidden" id="isEmailConfirmed" name="isEmailConfirmed" value="false">

                <button type="submit" id="joinBtn" class="my_secondary_btn">회원가입</button>
            </form>

            <div class="my_auth_form_box_link">
                <div><a href="/login-form">로그인</a></div>
                <div><a href="/user/password-reset-form">비밀번호 찾기</a></div>
            </div>
        </div>
    </div>
    <br/>
</div>

<!-- modal -->
<div id="authModal" class="modal modal1">
    <div class="modal-content modal1">
        <p style="font-size: 30px">💌 발송 완료 💌</p>
        <input type="text" id="authCodeText" placeholder="인증번호를 입력해주세요"/>
        <div class="modal-buttons">
            <button id="cancelBtn">취소</button>
            <button id="confirmBtn">확인</button>
        </div>
    </div>
</div>

<script>


    function showModal() {
        $('#authCodeText').val('');
        $('#authModal').css('display', 'block');
    }

    // "인증하기" 버튼 클릭 시 이메일로 인증번호 보내기 모달창 보이기
    $('#emailAuthButton').on('click', function () {
        emailSendCode();
    });

    // 취소 버튼 클릭 시 모달창 닫기
    $('#cancelBtn').on('click', function () {
        $('#authModal').css('display', 'none');
        // 인증 코드 입력란 초기화
    });
    // 모달창 스크립트 끝





    <!-- 이메일 주소로 메일 보내기 -->
    function emailSendCode() {
        let email = encodeURIComponent($("#email").val());

        $.ajax({
            url: '/send-mail?email=' + email,  // AJAX URL과 서버 매핑 URL 일치 여부 확인
            type: 'GET'

        }).done((res) => {
            console.log("Response:", res);
            emailCode = res.body;
            console.log("Received code:", emailCode);
            showModal();
        }).fail((res) => {
            alert("오류");
        });
    }


    // 인증번호 확인 로직
    let isEmailConfirmed = false;

    $("#confirmBtn").click(function () {
        let checkEmailCode = $("#authCodeText").val();

        $.ajax({
            url: '/check-email-code?emailCode=' + checkEmailCode,
            type: 'GET'
        }).done((res) => {
            if (res.body) {
                Swal.fire({
                    title: "인증이 완료되었습니다.",
                    icon: "success",
                    button: "확인"
                });
                $('#authModal').css('display', 'none');
                isEmailConfirmed = true; // 인증이 완료되었으므로 true로 설정
                $('#isEmailConfirmed').val('true'); // 서버로 값을 전송하기 위해 숨겨진 필드에 값 설정
            } else {
                Swal.fire({
                    title: "인증번호를 확인해주세요",
                    icon: "warning",
                    confirmButtonText: "확인"
                });
            }
        }).fail((res) => {
            alert("오류");
        });
    });


    // $("#confirmBtn").click(function () {
    //
    //     let checkEmailCode = $("#authCodeText").val();
    //     // console.log("입력 코드 " + checkCode);
    //
    //     $.ajax({
    //         url: '/check-email-code?emailCode=' + checkEmailCode,
    //         type: 'GET'
    //
    //     }).done((res)=>{
    //         if (res.body) {
    //             Swal.fire({
    //                 title: "인증이 완료되었습니다.",
    //                 icon: "success",
    //                 button: "확인"
    //             });
    //             $('#authModal').css('display', 'none');
    //             isEmailConfirmed = true; // 인증이 완료되었으므로 true로 설정
    //
    //             // Hidden input field에 값을 설정하여 서버로 전송될 수 있게 합니다.
    //             $('#isEmailConfirmed').val('true');
    //
    //         } else {
    //             Swal.fire({
    //                 title: "인증번호를 확인해주세요",
    //                 icon: "warning",
    //                 confirmButtonText: "확인"
    //             });
    //
    //             $('#authModal').css('display', 'block');
    //         }
    //
    //     }).fail((res) => {
    //         alert("오류");
    //     });
    //
    // });

    // 인증번호 확인 로직 끝

    //이메일을 다른걸로 바꾸면 isEmailConfirmed 값을 다시 false로 바꿔줘야할 것 같음
    $("#email").on("input", function () {
        isEmailConfirmed = false;
        // console.log("isEmailConfirmed " + isEmailConfirmed);
    });

    <!-- username 중복 체크 -->
    // 비밀번호 입력 필드에 keyup 이벤트 핸들러 추가
    $("#username").on('keyup', _.debounce(function () {
        console.log("Debounced event triggered"); // 디바운스 후 로그 출력
        // 입력된 비밀번호 값을 가져와서 콘솔에 출력
        console.log($(this).val());
        let username = $(this).val();

        $.ajax({
            url: '/username-check?username=' + username,
            type: 'GET'

        }).done((res) => {
            console.log("Res " + JSON.stringify(res));

            // 응답 구조에 따라 확인
            if (username === "") {
                // 입력란이 빈 경우 텍스트 숨기기
                $("#usernameError, #usernameSuccess").addClass("my_hidden").hide();
            } else if (res.body === "USER_EXIST") {
                showError(); // 에러 메시지 표시
            } else if (res.body === "USER_NO_EXIST") {
                showSuccess(); // 성공 메시지 표시
            }
        }).fail((res) => {
            alert("오류가 발생했습니다. 다시 시도해 주세요.");
        });
    }, 300));


    // 에러 메시지를 표시하고 성공 메시지를 숨기는 함수
    function showError() {
        $("#usernameError").removeClass("my_hidden").show();
        $("#usernameSuccess").addClass("my_hidden").hide();
    }

    // 성공 메시지를 표시하고 에러 메시지를 숨기는 함수
    function showSuccess() {
        $("#usernameSuccess").removeClass("my_hidden").show();
        $("#usernameError").addClass("my_hidden").hide();
    }

    <!-- username 중복 체크 끝-->

    <!-- 비밀번호 동일 체크 -->
    $("#same-password").on("input", function () {
        let password = $("#password").val(); // 비밀번호 입력값
        //console.log("패스워드 = " + password);

        let confirmPassword = $("#same-password").val(); // 비밀번호 확인 입력값
        //console.log("확인용 = " + confirmPassword);


        if (password === confirmPassword) {
            $("#successText").show();
            $("#errorText").hide();
            $("#same-password").removeClass("error").addClass("correct");
            $("#joinBtn").css({
                "background-color": "rgb(255, 85, 68)",
                "color": "rgba(255,255,255,.8)"
            });


        } else if (confirmPassword === "") {
            $("#successText").hide();
            $("#errorText").hide();

        } else {
            $("#successText").hide();
            $("#errorText").show();
            $("#same-password").removeClass("correct").addClass("error");

            $("#joinBtn").css({
                "background-color": "",
                "color": ""
            });
        }
    });
    <!-- 비밀번호 동일 체크 끝-->

    // 이메일 인증 안되면 막기 + 비번이 다르면 form 제출 못하게 막아놓음
    $("#joinForm").on("submit", function (e) {
        // 폼 막기
        e.preventDefault();

        // 이메일 인증 여부 확인
        if (!isEmailConfirmed) {
            swal({
                text: "이메일 인증이 필요합니다.",
                icon: "warning",
                button: "확인"
            });
            return; // 이메일 인증이 안된 경우 폼 제출 막기
        }

        // 패스워드 유효성 검사
        let password = $("#password").val();
        let confirmPassword = $("#same-password").val();

        if (password !== confirmPassword || confirmPassword === "") {
            swal({
                text: "비밀번호를 확인해주세요",
                icon: "warning",
                button: "확인"
            });
        } else {
            // AJAX 요청으로 폼 제출
            $.ajax({
                url: $(this).attr("action"), // "/join"
                type: $(this).attr("method"), // "POST"
                data: $(this).serialize(), // 폼 데이터 직렬화
                success: function (response) {
                    if (response.body === 200) {
                        // 성공 시 메인 페이지로 리다이렉트
                        window.location.href = "/"; // 리다이렉트할 메인 페이지 URL
                    } else {
                        swal({
                            text: response.message || "회원가입에 실패했습니다.",
                            icon: "warning",
                            button: "확인"
                        });
                    }
                },
                error: function (xhr, status, error) {
                    swal({
                        text: "오류가 발생했습니다. 다시 시도해 주세요.",
                        icon: "error",
                        button: "확인"
                    });
                }
            });
        }
    });


    // $("#joinForm").on("submit", function (e) {
    //     // 폼 막기
    //     e.preventDefault();
    //
    //     // 이메일 인증 여부 확인
    //     if (!isEmailConfirmed) {
    //         swal({
    //             text: "이메일 인증이 필요합니다.",
    //             icon: "warning",
    //             button: "확인"
    //         });
    //         return; // 이메일 인증이 안된 경우 폼 제출 막기
    //     }
    //
    //     // 패스워드 유효성 검사
    //     let password = $("#password").val();
    //     let confirmPassword = $("#same-password").val();
    //
    //     if (password !== confirmPassword || confirmPassword === "") {
    //         swal({
    //             text: "비밀번호를 확인해주세요",
    //             icon: "warning",
    //             button: "확인"
    //         });
    //     } else {
    //         // 폼을 제출
    //         this.submit();
    //     }
    // });

    // $("#joinForm").on("submit", function (e) {
    //     //폼 막기
    //     e.preventDefault();
    //
    //     console.log("1");
    //
    //
    //
    //     // 패스워드 유효성 검사
    //     let password = $("#password").val();
    //     //console.log("패스워드 = " + password);
    //
    //     let confirmPassword = $("#same-password").val();
    //     //console.log("확인용 = " + confirmPassword);
    //
    //     if (password !== confirmPassword) {
    //         e.preventDefault();
    //
    //         swal({
    //             text: "비밀번호를 확인해주세요",
    //             icon: "warning",
    //             button: "확인"
    //         });
    //
    //     } else if (confirmPassword === "") {
    //         e.preventDefault();
    //
    //         swal({
    //             text: "비밀번호를 확인해주세요",
    //             icon: "warning",
    //             button: "확인"
    //         });
    //     }
    //     // 패스워드 유효성 검사
    // });
    //



</script>

{{>/layout/footer}}