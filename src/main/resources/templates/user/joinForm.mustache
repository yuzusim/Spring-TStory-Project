{{>/layout/main-header}}

<div class="container">
    <div class="my_auth_box">
        <div class="my_auth_form_box">
            <div class="my_auth_form_box_title">JSotry</div>
            <div class="my_error_box my_hidden">
            </div>
            <form action="/join" method="post" id="joinForm">
                <input id="username" class="my_auth_form_box_input" type="text" name="username" placeholder="유저네임"
                       maxlength="20" value="" required/>
                <div id="usernameError" class="my_hidden" style="color: red">중복된 아이디입니다.</div>
                <div id="usernameSuccess" class="my_hidden" style="color: blue">사용 가능한 아이디입니다.</div>

                <input id="password" class="my_auth_form_box_input" type="password" name="password" placeholder="비밀번호"
                       maxlength="20" value="1234" required/>
                <input id="same-password" class="my_auth_form_box_input" type="password" name="" placeholder="비밀번호 확인"
                       maxlength="20" required/>
                <div id="errorText" style="color: red">비밀번호가 일치하지 않습니다.</div>
                <div id="successText" style="color: blue">비밀번호가 일치합니다.</div>

                <div class="email-box d-flex">
                    <input class="my_auth_form_box_input" type="email" name="email" placeholder="이메일" maxlength="60"
                           value="ssar1@nate.com"
                           required/>
                    <button class="btn btn-outline-info btn-sm" type="button" id="emailAuthButton">인증하기</button>
                    <!--                <button class="btn btn-outline-success btn-sm" type="submit" onclick="emailCheck()">인증하기</button>-->
                </div>

                <button type="submit" id="joinBtn" class="my_secondary_btn">회원가입</button>
            </form>

            <div class="my_auth_form_box_link">
                <div><a href="/login-form">로그인</a></div>
                <div><a href="/user/password-reset-form">비밀번호 찾기</a></div>
            </div>
        </div>
    </div>
    <br/>
</div>

<!-- modal -->
<div id="authModal" class="modal">
    <div class="modal-content">
        <p style="font-size: 30px">💌 발송 완료 💌</p>
        <input type="text" id="authCodeText" placeholder="인증번호를 입력해주세요"/>
        <div class="modal-buttons">
            <button id="cancelBtn">취소</button>
            <button id="confirmBtn">확인</button>
        </div>
    </div>
</div>

<script>

    <!-- username 중복 체크 -->
    // 비밀번호 입력 필드에 keyup 이벤트 핸들러 추가
    $("#username").on('keyup', _.debounce(function () {
        console.log("Debounced event triggered"); // 디바운스 후 로그 출력
        // 입력된 비밀번호 값을 가져와서 콘솔에 출력
        console.log($(this).val());
        let username = $(this).val();

        $.ajax({
            url: '/username-check?username=' + username,
            type: 'GET'

        }).done((res) => {
            console.log("Res " + JSON.stringify(res));

            // 응답 구조에 따라 확인
            if (username === "") {
                // 입력란이 빈 경우 텍스트 숨기기
                $("#usernameError, #usernameSuccess").addClass("my_hidden").hide();
            } else if (res.body === "USER_EXIST") {
                showError(); // 에러 메시지 표시
            } else if (res.body === "USER_NO_EXIST") {
                showSuccess(); // 성공 메시지 표시
            }
        }).fail((res) => {
            alert("오류가 발생했습니다. 다시 시도해 주세요.");
        });
    }, 300));


    // 에러 메시지를 표시하고 성공 메시지를 숨기는 함수
    function showError() {
        $("#usernameError").removeClass("my_hidden").show();
        $("#usernameSuccess").addClass("my_hidden").hide();
    }

    // 성공 메시지를 표시하고 에러 메시지를 숨기는 함수
    function showSuccess() {
        $("#usernameSuccess").removeClass("my_hidden").show();
        $("#usernameError").addClass("my_hidden").hide();
    }

    <!-- username 중복 체크 끝-->

    <!-- 비밀번호 동일 체크 -->
    $("#same-password").on("input", function () {
        let password = $("#password").val(); // 비밀번호 입력값
        //console.log("패스워드 = " + password);

        let confirmPassword = $("#same-password").val(); // 비밀번호 확인 입력값
        //console.log("확인용 = " + confirmPassword);


        if (password === confirmPassword) {
            $("#successText").show();
            $("#errorText").hide();
            $("#same-password").removeClass("error").addClass("correct");
            $("#joinBtn").css({
                "background-color": "rgb(255, 85, 68)",
                "color": "rgba(255,255,255,.8)"
            });


        } else if (confirmPassword === "") {
            $("#successText").hide();
            $("#errorText").hide();

        } else {
            $("#successText").hide();
            $("#errorText").show();
            $("#same-password").removeClass("correct").addClass("error");

            $("#joinBtn").css({
                "background-color": "",
                "color": ""
            });
        }
    });
    <!-- 비밀번호 동일 체크 끝-->

    // 이메일 인증 안되면 막기 + 비번이 다르면 form 제출 못하게 막아놓음
    $("#joinForm").on("submit", function (e) {

        // 패스워드 유효성 검사
        let password = $("#password").val();
        //console.log("패스워드 = " + password);

        let confirmPassword = $("#same-password").val();
        //console.log("확인용 = " + confirmPassword);

        if (password !== confirmPassword) {
            e.preventDefault();

            swal({
                text: "비밀번호를 확인해주세요",
                icon: "warning",
                button: "확인"
            });

        } else if (confirmPassword === "") {
            e.preventDefault();

            swal({
                text: "비밀번호를 확인해주세요",
                icon: "warning",
                button: "확인"
            });
        }
        // 패스워드 유효성 검사
    });


</script>

{{>/layout/footer}}